WITH
	RFM_STATS AS (
		SELECT
			CUSTOMER_ID AS CUSTOMER,
			MAX(INVOICEDATE::DATE) AS "latest_order",
			CURRENT_DATE - MAX(INVOICEDATE::DATE) AS RECENCY,
			COUNT(DISTINCT INVOICE) AS FREQUENCY,
			ROUND(SUM(PRICE * QUANTITY)::NUMERIC, 2) AS MONETARY
		FROM
			TABLERETAIL T
		GROUP BY
			CUSTOMER
	),
	RFM_SCORES AS (
		SELECT
			CUSTOMER,
			"latest_order",
			RECENCY,
			NTILE(5) OVER (
				ORDER BY
					RECENCY DESC
			) AS R_SCORE,
			FREQUENCY,
			NTILE(5) OVER (
				ORDER BY
					FREQUENCY
			) AS F_SCORE,
			MONETARY,
			ROUND(
				PERCENT_RANK() OVER (
					ORDER BY
						MONETARY
				)::NUMERIC,
				3
			) AS M_SCORE
		FROM
			RFM_STATS
	),
	R_FM_SCORES AS (
		SELECT
			CUSTOMER,
			RECENCY,
			FREQUENCY,
			MONETARY,
			M_SCORE,
			R_SCORE,
			ROUND((SUM(M_SCORE + F_SCORE) / 2)::NUMERIC) AS FM_SCORE
		FROM
			RFM_SCORES
		GROUP BY
			CUSTOMER,
			RECENCY,
			FREQUENCY,
			MONETARY,
			M_SCORE,
			R_SCORE
	)
SELECT
	CUSTOMER,
	RECENCY,
	FREQUENCY,
	MONETARY,
	R_SCORE,
	FM_SCORE,
	CASE
		WHEN R_SCORE = 5
		AND FM_SCORE IN (5, 4) THEN 'champions'
		WHEN R_SCORE = 4
		AND FM_SCORE = 5 THEN 'champions'
		WHEN R_SCORE = 5
		AND FM_SCORE = 2 THEN 'potential loyalist'
		WHEN R_SCORE = 4
		AND FM_SCORE IN (2, 3) THEN 'potential loyalist'
		WHEN R_SCORE = 3
		AND FM_SCORE = 3 THEN 'potential loyalist'
		WHEN R_SCORE = 5
		AND FM_SCORE = 3 THEN 'loyal customers'
		WHEN R_SCORE = 4
		AND FM_SCORE = 4 THEN 'loyal customers'
		WHEN R_SCORE = 3
		AND FM_SCORE IN (5, 4) THEN 'loyal customers'
		WHEN R_SCORE = 5
		AND FM_SCORE = 1 THEN 'recent customer'
		WHEN R_SCORE = 4
		AND FM_SCORE = 1 THEN 'promising'
		WHEN R_SCORE = 3
		AND FM_SCORE = 1 THEN 'promising'
		WHEN R_SCORE = 2
		AND FM_SCORE IN (3, 2) THEN 'needs attention'
		WHEN R_SCORE = 3
		AND FM_SCORE = 2 THEN 'needs attention'
		WHEN R_SCORE = 2
		AND FM_SCORE IN (5, 4) THEN 'At Risk'
		WHEN R_SCORE = 1
		AND FM_SCORE = 3 THEN 'At Risk'
		WHEN R_SCORE = 1
		AND FM_SCORE IN (5, 4) THEN 'cant lose them'
		WHEN R_SCORE = 1
		AND FM_SCORE = 2 THEN 'Hibernating'
		WHEN R_SCORE = 2
		AND FM_SCORE = 1 THEN 'Hibernating'
		WHEN R_SCORE = 1
		AND FM_SCORE = 1 THEN 'lost'
	END AS CUSTOMER_SEGMENTATION
FROM
	R_FM_SCORES
ORDER BY
	CUSTOMER_SEGMENTATION;